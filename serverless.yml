org: vfn2002
app: vfn-dev-articles
service:
  name: vfn-dev-articles

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  ARTICLES_TABLE_NAME: ${self:service}-Articles${opt:stage, self:provider.stage}
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.ARTICLES_TABLE_NAME}
            sources: [./.data/articles.json]

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: dev
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    ARTICLES_TABLE_NAME: ${self:custom.ARTICLES_TABLE_NAME}
    #IS_OFFLINE: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: '*'

functions:
  listArticles:
    handler: ./functions/articles.list
    events:
      - http:
          method: get
          path: list
          cors: true
  putArticle:
    handler: ./functions/articles.put
    events:
      - http:
          method: put
          path: put
  getArticle:
    handler: ./functions/articles.get
    events:
      - http:
          method: get
          path: get/{id}
          cors: true
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    ArticlesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        TableName: ${self:custom.ARTICLES_TABLE_NAME}
